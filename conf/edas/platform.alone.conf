# k8s ingress metrics
# [[inputs.prometheus]]
#     interval = "1m"
#     urls = $K8S_INGRESS_URLS

[[inputs.prometheus_metric]]
  urls = $ETCD_URLS
  metric_name = "etcd"
  exclude_zero_value = true
  tls_ca = "/netdata/dice-ops/dice-config/certificates/ca.pem"
  tls_cert = "/netdata/dice-ops/dice-config/certificates/etcd-client.pem"
  tls_key = "/netdata/dice-ops/dice-config/certificates/etcd-client-key.pem"
  insecure_skip_verify = true
  [inputs.prometheus_metric.tags]
    addon_id = "etcd"
    addon_type = "etcd"
    edge_cluster = "true"

[[inputs.kube_inventory]]
  interval = "1m"
  namespace = "kube-system"
  url = "$MASTER_VIP_URL"
  resource_include = [ "nodes", "daemonsets", "statefulsets", "deployments" ]
  bearer_token = "/run/secrets/kubernetes.io/serviceaccount/token"
  tls_ca = "/run/secrets/kubernetes.io/serviceaccount/ca.crt"
  
[[inputs.kube_inventory]]
  interval = "1m"
  namespace = "default"
  url = "$MASTER_VIP_URL"
  resource_include = [ "daemonsets", "statefulsets", "deployments" ]
  bearer_token = "/run/secrets/kubernetes.io/serviceaccount/token"
  tls_ca = "/run/secrets/kubernetes.io/serviceaccount/ca.crt"

[[inputs.kube_inventory]]
  interval = "1m"
  namespace = ""
  url = "$MASTER_VIP_URL"
  resource_include = [ "pods" ]
  bearer_token = "/run/secrets/kubernetes.io/serviceaccount/token"
  tls_ca = "/run/secrets/kubernetes.io/serviceaccount/ca.crt"

[[inputs.global_kubernetes]] # 共享 kubernetes client, 不主动采集数据
    k8s_url = "$MASTER_VIP_URL"
    k8s_timeout = "${K8S_TIMEOUT:20s}"
    k8s_bearer_token = "${K8S_BEARER_TOKEN:/run/secrets/kubernetes.io/serviceaccount/token}"
    [inputs.global_kubernetes.k8s_client_config]
        tls_ca = "${K8S_TLS_CA:/run/secrets/kubernetes.io/serviceaccount/ca.crt}"